// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (b BlockParams) MarshalJSON() ([]byte, error) {
	type BlockParams struct {
		NumTransactions uint16        `json:"numTransactions" gencodec:"required"`
		TimeShift       uint8         `json:"timeShift"       gencodec:"required"`
		SignalSlots     []common.Hash `json:"signalSlots"     gencodec:"required"`
	}
	var enc BlockParams
	enc.NumTransactions = b.NumTransactions
	enc.TimeShift = b.TimeShift
	enc.SignalSlots = b.SignalSlots
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (b *BlockParams) UnmarshalJSON(input []byte) error {
	type BlockParams struct {
		NumTransactions *uint16       `json:"numTransactions" gencodec:"required"`
		TimeShift       *uint8        `json:"timeShift"       gencodec:"required"`
		SignalSlots     []common.Hash `json:"signalSlots"     gencodec:"required"`
	}
	var dec BlockParams
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.NumTransactions == nil {
		return errors.New("missing required field 'numTransactions' for BlockParams")
	}
	b.NumTransactions = *dec.NumTransactions
	if dec.TimeShift == nil {
		return errors.New("missing required field 'timeShift' for BlockParams")
	}
	b.TimeShift = *dec.TimeShift
	if dec.SignalSlots == nil {
		return errors.New("missing required field 'signalSlots' for BlockParams")
	}
	b.SignalSlots = dec.SignalSlots
	return nil
}
