// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common/math"
)

var _ = (*libSharedDataBaseFeeConfigMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (l LibSharedDataBaseFeeConfig) MarshalJSON() ([]byte, error) {
	type LibSharedDataBaseFeeConfig struct {
		AdjustmentQuotient     uint8               `json:"adjustmentQuotient" gencodec:"required"`
		SharingPctg            uint8               `json:"sharingPctg" gencodec:"required"`
		GasIssuancePerSecond   uint32              `json:"gasIssuancePerSecond" gencodec:"required"`
		MinGasExcess           math.HexOrDecimal64 `json:"minGasExcess" gencodec:"required"`
		MaxGasIssuancePerBlock uint32              `json:"maxGasIssuancePerBlock" gencodec:"required"`
	}
	var enc LibSharedDataBaseFeeConfig
	enc.AdjustmentQuotient = l.AdjustmentQuotient
	enc.SharingPctg = l.SharingPctg
	enc.GasIssuancePerSecond = l.GasIssuancePerSecond
	enc.MinGasExcess = math.HexOrDecimal64(l.MinGasExcess)
	enc.MaxGasIssuancePerBlock = l.MaxGasIssuancePerBlock
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (l *LibSharedDataBaseFeeConfig) UnmarshalJSON(input []byte) error {
	type LibSharedDataBaseFeeConfig struct {
		AdjustmentQuotient     *uint8               `json:"adjustmentQuotient" gencodec:"required"`
		SharingPctg            *uint8               `json:"sharingPctg" gencodec:"required"`
		GasIssuancePerSecond   *uint32              `json:"gasIssuancePerSecond" gencodec:"required"`
		MinGasExcess           *math.HexOrDecimal64 `json:"minGasExcess" gencodec:"required"`
		MaxGasIssuancePerBlock *uint32              `json:"maxGasIssuancePerBlock" gencodec:"required"`
	}
	var dec LibSharedDataBaseFeeConfig
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.AdjustmentQuotient == nil {
		return errors.New("missing required field 'adjustmentQuotient' for LibSharedDataBaseFeeConfig")
	}
	l.AdjustmentQuotient = *dec.AdjustmentQuotient
	if dec.SharingPctg == nil {
		return errors.New("missing required field 'sharingPctg' for LibSharedDataBaseFeeConfig")
	}
	l.SharingPctg = *dec.SharingPctg
	if dec.GasIssuancePerSecond == nil {
		return errors.New("missing required field 'gasIssuancePerSecond' for LibSharedDataBaseFeeConfig")
	}
	l.GasIssuancePerSecond = *dec.GasIssuancePerSecond
	if dec.MinGasExcess == nil {
		return errors.New("missing required field 'minGasExcess' for LibSharedDataBaseFeeConfig")
	}
	l.MinGasExcess = uint64(*dec.MinGasExcess)
	if dec.MaxGasIssuancePerBlock == nil {
		return errors.New("missing required field 'maxGasIssuancePerBlock' for LibSharedDataBaseFeeConfig")
	}
	l.MaxGasIssuancePerBlock = *dec.MaxGasIssuancePerBlock
	return nil
}
