// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*consolidationRequestMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (c ConsolidationRequest) MarshalJSON() ([]byte, error) {
	type ConsolidationRequest struct {
		SourceAddress common.Address `json:"sourceAddress" gencodec:"required"`
		SourcePubkey  hexutil.Bytes  `json:"sourcePubkey" gencodec:"required"`
		TargetPubkey  hexutil.Bytes  `json:"targetPubkey" gencodec:"required"`
	}
	var enc ConsolidationRequest
	enc.SourceAddress = c.SourceAddress
	enc.SourcePubkey = c.SourcePubkey[:]
	enc.TargetPubkey = c.TargetPubkey[:]
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (c *ConsolidationRequest) UnmarshalJSON(input []byte) error {
	type ConsolidationRequest struct {
		SourceAddress *common.Address `json:"sourceAddress" gencodec:"required"`
		SourcePubkey  *hexutil.Bytes  `json:"sourcePubkey" gencodec:"required"`
		TargetPubkey  *hexutil.Bytes  `json:"targetPubkey" gencodec:"required"`
	}
	var dec ConsolidationRequest
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.SourceAddress == nil {
		return errors.New("missing required field 'sourceAddress' for ConsolidationRequest")
	}
	c.SourceAddress = *dec.SourceAddress
	if dec.SourcePubkey == nil {
		return errors.New("missing required field 'sourcePubkey' for ConsolidationRequest")
	}
	if len(*dec.SourcePubkey) != len(c.SourcePubkey) {
		return errors.New("field 'sourcePubkey' has wrong length, need 48 items")
	}
	copy(c.SourcePubkey[:], *dec.SourcePubkey)
	if dec.TargetPubkey == nil {
		return errors.New("missing required field 'targetPubkey' for ConsolidationRequest")
	}
	if len(*dec.TargetPubkey) != len(c.TargetPubkey) {
		return errors.New("field 'targetPubkey' has wrong length, need 48 items")
	}
	copy(c.TargetPubkey[:], *dec.TargetPubkey)
	return nil
}
